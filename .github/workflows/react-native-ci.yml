name: React Native Staging CI/CD

on:
  push:
    branches: [ development ]
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint ./src
        continue-on-error: true # Ignore lint errors for now, to allow the workflow to continue

      - name: Type check
        run: npm run typecheck

  build-android:
    name: Build Android
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

        # Validate Gradle wrapper to prevent build tool attack
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Install dependencies
        run: npm ci

      - name: Build with Gradle
        run: |
          cd android
          ./gradlew assembleDebug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-android
          path: |
            android/app/build/outputs/apk/debug/app-debug.apk
            # Add more if you have aab, mapping files, etc.
            # android/app/build/outputs/bundle/debug/app-debug.aab
          retention-days: 5

#  build-ios:
#    name: Build iOS
#    needs: lint-and-test
#    runs-on: macos-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Setup Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: 20
#          cache: 'npm'
#
#      - name: Install dependencies
#        run: npm ci
#
#      - name: Setup Expo and EAS
#        run: npm install -g expo-cli eas-cli
#
#      - name: Build iOS with EAS
#        run: eas build --platform ios --non-interactive --local
#        env:
#          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
#
#      - name: Upload iOS artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: app-ios
#          path: build/ios/
#          retention-days: 5
